- name: Install packages - system Python
  pip:
    name: "{{ item }}"
    state: present
  with_items:
  - autoenv
  - virtualenv
  become: yes

- name: Create directories - Python 2, Python 3
# Necessary to be explicit for correct permissions
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - "{{ py2dir }}"
  - "{{ py3dir }}"

- name: Install packages - Python 2 virtualenv
  pip:
    name: "{{ item }}"
    state: present
    extra_args: --upgrade
    virtualenv: "{{ py2vedir }}"
    virtualenv_command: virtualenv
  with_items:
  - pip
  - ansible
  become: yes

- name: Install packages - Python 3 virtualenv
  pip:
    name: "{{ item }}"
    state: present
    extra_args: --upgrade
    virtualenv: "{{ py3vedir }}"
    virtualenv_command: /usr/bin/python3 -m venv
  with_items:
  - pip
  - ansible
  - selenium
  become: yes

- name: Python 2,3 virtualenvs - Upgrade pip
  pip:
    name: pip
    extra_args: --upgrade
    virtualenv: "{{ item.dir }}"
    virtualenv_command: "{{ item.command }}"
  with_items:
  - dir: "{{ py2vedir }}"
    command: virtualenv
  - dir: "{{ py3vedir }}"
    command: /usr/bin/python3 -m venv
  become: yes

- name: Python 2,3 virtualenvs - Enable columns in pip list output
  ini_file:
    dest: "{{ item }}"
    section: list
    option: --format
    value: columns
  with_items:
  - "{{ py2vedir }}/pip.conf"
  - "{{ py3vedir }}/pip.conf"
  become: yes

- name: Python 2 and 3 virtual environments - .env
  copy:
    dest: "{{ item.dest }}"
    content: "{{ item.content }}"
  with_items:
  - dest: "/{{ py2dir }}/.env"
    content: "source {{ py2vedir }}/bin/activate"
  - dest: "/{{ py3dir }}/.env"
    content: "source {{ py3vedir }}/bin/activate"
  - dest: "/{{ homedir }}/.env"
    content: |
      if [ -n "$VIRTUAL_ENV" ] ; then
          deactivate
      fi

- name: Git - Checkout "Python" repository
  git:
    repo: "{{ git_repo_python }}"
    dest: "{{ py3dir }}/python"
    clone: yes
    accept_hostkey: yes
  when: {{ git_repo_python }} is defined